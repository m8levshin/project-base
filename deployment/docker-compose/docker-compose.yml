version: "3.9"

services:

  authorization-service:
    build:
      dockerfile: ../../authorization-service/Dockerfile
      context: ../../authorization-service
    ports:
      - "9000:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  token-handler-service:
    build:
      dockerfile: ../../token-handler-service/Dockerfile
      context: ../../token-handler-service
    ports:
      - "9010:8080"
    environment:
      KTOR_PROFILES_ACTIVE: docker

  spring-example-service:
    build:
      dockerfile: ../../spring-example-service/Dockerfile
      context: ../../spring-example-service
    ports:
      - "8020:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  ktor-example-service:
    build:
      dockerfile: ../../ktor-example-service/Dockerfile
      context: ../../ktor-example-service
    ports:
      - "8010:8080"
    environment:
      KTOR_PROFILES_ACTIVE: docker


  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14250:14250"

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector/otel-collector.yml" ]
    volumes:
      - ./config/otel-collector:/etc/otel-collector
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
  loki:
    image: grafana/loki:2.6.1
    ports:
      - "3100:3100"
    volumes:
      - ./volumes/loki:/loki

  vector:
    image: timberio/vector:0.23.3-alpine
    restart: unless-stopped
    ports: [ "8383:8383", "8686:8686", "9160:9160", "4545:4545/udp" ]
    volumes:
      - ./config/vector/vector.toml:/etc/vector/vector.toml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./volumes/vector/logs:/logs
    depends_on: [ loki, prometheus ]

  prometheus:
    image: prom/prometheus:v2.31.2
    restart: unless-stopped
    command: --config.file=/etc/prometheus/prometheus.yaml --web.route-prefix=/ --storage.tsdb.path=/prometheus --storage.tsdb.retention.time=30d --web.enable-lifecycle --web.enable-admin-api
    ports: [ "3001:9090" ]
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yaml
      - ./volumes/prometheus:/prometheus

  grafana:
    image: grafana/grafana:9.2.2
    ports:
      - "3000:3000"
    volumes:
      - ./volumes/grafana:/var/lib/grafana
      - ./config/grafana/:/etc/grafana/provisioning/